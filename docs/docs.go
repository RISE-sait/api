// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/memberships": {
            "get": {
                "description": "Get a list of memberships",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Get a list of memberships",
                "responses": {
                    "200": {
                        "description": "List of memberships retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/membership.MembershipResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new membership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Create a new membership",
                "parameters": [
                    {
                        "description": "Membership details",
                        "name": "membership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/membership.MembershipRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Membership created successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/memberships/{id}": {
            "get": {
                "description": "Get a membership by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Get a membership by ID",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Membership retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/membership.MembershipResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Membership not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a membership",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Update a membership",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Membership details",
                        "name": "membership",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/membership.MembershipRequestDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content: Membership updated successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Membership not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a membership by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "memberships"
                ],
                "summary": "Delete a membership",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                        "description": "Membership ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content: Membership deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Membership not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/memberships/{membershipId}/plans": {
            "get": {
                "description": "Get membership plans by membership ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "membership-plans"
                ],
                "summary": "Get membership plans by membership ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membershipId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of membership plans retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/membership.MembershipPlanResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid membership ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Membership plans not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new membership plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "membership-plans"
                ],
                "summary": "Create a new membership plan",
                "parameters": [
                    {
                        "description": "Membership plan details",
                        "name": "plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/membership.MembershipPlanRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Membership plan created successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/memberships/{membershipId}/plans/{planId}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a membership plan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "membership-plans"
                ],
                "summary": "Update a membership plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membershipId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Membership plan details",
                        "name": "plan",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/membership.MembershipPlanRequestDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content: Membership plan updated successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Membership plan not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a membership plan by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "membership-plans"
                ],
                "summary": "Delete a membership plan",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Membership ID",
                        "name": "membershipId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Plan ID",
                        "name": "planId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content: Membership plan deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Membership plan not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/staffs": {
            "get": {
                "description": "Get a list of staff members",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Get a list of staff members",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                        "description": "Role ID to filter staff",
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of staff members retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.StaffResponseDto"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/staffs/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a staff member",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Update a staff member",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Staff details",
                        "name": "staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StaffRequestDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content: Staff updated successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Staff not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a staff member by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "staff"
                ],
                "summary": "Delete a staff member",
                "parameters": [
                    {
                        "type": "string",
                        "example": "\"f47ac10b-58cc-4372-a567-0e02b2c3d479\"",
                        "description": "Staff ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content: Staff deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Staff not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Authenticates a user using credentials and returns a JWT token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "Authenticate a user and return a JWT token",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginCredentialsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User authenticated successfully",
                        "schema": {
                            "$ref": "#/definitions/entity.UserInfo"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/courses": {
            "get": {
                "description": "Get a list of courses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a list of courses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by course name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by course description",
                        "name": "description",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of courses retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.CourseResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a new course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Create a new course",
                "parameters": [
                    {
                        "description": "Course details",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CourseRequestDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Course created successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/courses/{id}": {
            "get": {
                "description": "Get a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Get a course by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course retrieved successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.CourseResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Course not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a course",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Update a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Course details",
                        "name": "course",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CourseRequestDto"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content: Course updated successfully"
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Course not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a course by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "courses"
                ],
                "summary": "Delete a course",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Course ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request: Invalid ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found: Course not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/register/child/pending": {
            "post": {
                "description": "Registers a child account that requires parental confirmation before activation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registration"
                ],
                "summary": "Create a pending child account",
                "parameters": [
                    {
                        "description": "Pending child account details",
                        "name": "child",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreatePendingChildAccountDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Child account request created successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/register/customer": {
            "post": {
                "description": "Registers a new customer with provided details and creates JWT authentication token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registration"
                ],
                "summary": "Create a new customer account",
                "parameters": [
                    {
                        "description": "Customer registration details",
                        "name": "customer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CustomerRegistrationDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Customer registered successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/register/staff": {
            "post": {
                "description": "Registers a new staff member with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "registration"
                ],
                "summary": "Create a new staff member account",
                "parameters": [
                    {
                        "description": "Staff registration details",
                        "name": "staff",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.StaffRegistrationDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Staff registered successfully",
                        "schema": {
                            "$ref": "#/definitions/dto.StaffRegistrationDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CourseRequestDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CourseResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dto.CreatePendingChildAccountDto": {
            "type": "object",
            "required": [
                "child",
                "parent_email"
            ],
            "properties": {
                "child": {
                    "$ref": "#/definitions/dto.CustomerRegistrationDto"
                },
                "parent_email": {
                    "type": "string"
                }
            }
        },
        "dto.CustomerRegistrationDto": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                },
                "waivers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.CustomerWaiverSigningDto"
                    }
                }
            }
        },
        "dto.CustomerWaiverSigningDto": {
            "type": "object",
            "required": [
                "waiver_url"
            ],
            "properties": {
                "is_waiver_signed": {
                    "type": "boolean"
                },
                "waiver_url": {
                    "type": "string"
                }
            }
        },
        "dto.LoginCredentialsDto": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 8
                }
            }
        },
        "dto.StaffRegistrationDto": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "is_active",
                "last_name",
                "role_name"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "last_name": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                }
            }
        },
        "dto.StaffRequestDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "role_id": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.StaffResponseDto": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "role_id": {
                    "type": "string"
                },
                "role_name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.StaffInfo": {
            "type": "object",
            "properties": {
                "isActive": {
                    "type": "boolean"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "entity.UserInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "staffInfo": {
                    "$ref": "#/definitions/entity.StaffInfo"
                }
            }
        },
        "membership.MembershipPlanRequestDto": {
            "type": "object",
            "required": [
                "membership_id",
                "price"
            ],
            "properties": {
                "amt_periods": {
                    "type": "integer"
                },
                "membership_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "payment_frequency": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "membership.MembershipPlanResponse": {
            "type": "object",
            "properties": {
                "amt_periods": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "membership_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "payment_frequency": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                }
            }
        },
        "membership.MembershipRequestDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Access to all premium features"
                },
                "name": {
                    "type": "string",
                    "example": "Premium Membership"
                }
            }
        },
        "membership.MembershipResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "localhost:8080",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
