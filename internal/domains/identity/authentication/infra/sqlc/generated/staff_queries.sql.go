// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: staff_queries.sql

package db

import (
	"context"
	"database/sql"
	"time"
)

const getStaffByEmail = `-- name: GetStaffByEmail :one
SELECT oi.name, u.email, s.is_active, s.created_at, s.updated_at, s.role FROM staff s
JOIN users u ON s.id = u.id
JOIN user_optional_info oi ON oi.id = u.id WHERE u.email = $1
`

type GetStaffByEmailRow struct {
	Name      sql.NullString `json:"name"`
	Email     string         `json:"email"`
	IsActive  bool           `json:"is_active"`
	CreatedAt time.Time      `json:"created_at"`
	UpdatedAt time.Time      `json:"updated_at"`
	Role      StaffRoleEnum  `json:"role"`
}

func (q *Queries) GetStaffByEmail(ctx context.Context, email string) (GetStaffByEmailRow, error) {
	row := q.db.QueryRowContext(ctx, getStaffByEmail, email)
	var i GetStaffByEmailRow
	err := row.Scan(
		&i.Name,
		&i.Email,
		&i.IsActive,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Role,
	)
	return i, err
}
